# 
# Release Builder
# 
FROM 289208114389.dkr.ecr.us-east-1.amazonaws.com/picpay/node:18-buster AS builder

ARG GITHUB_TOKEN_MOONLIGHT
RUN echo "@picpay:registry=https://npm.pkg.github.com" > ~/.npmrc && \
    echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN_MOONLIGHT" >> ~/.npmrc

COPY . .

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends python3 g++ build-essential && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* \
    yarn config set python /usr/bin/python3

RUN yarn install --frozen-lockfile --ignore-scripts --network-timeout 600000 && rm -rf "$(yarn cache dir)"
RUN yarn tsc
RUN yarn build

# 
# Release Frontend
# 
FROM 289208114389.dkr.ecr.us-east-1.amazonaws.com/picpay-dev/nginx:mainline-alpine AS frontend
RUN apk add jq yq bash && \
    rm -rf /var/cache/apk/*
COPY ./app-config.* /app/
COPY ./github-apps.yaml /app/
COPY ./github-apps-*.yaml /app/
COPY --from=builder /packages/app/dist /usr/share/nginx/html
COPY docker/default.conf.template /etc/nginx/templates/default.conf.template
COPY docker/inject-config.sh /docker-entrypoint.d/40-inject-config.sh
ENV PORT 80

#
# Release Backend
# 
FROM 289208114389.dkr.ecr.us-east-1.amazonaws.com/picpay/node:18-alpine AS backend

RUN addgroup -S moonlight \
    && adduser -S moonlight -G moonlight

USER moonlight    

WORKDIR /app
RUN apk add --update --no-cache build-base gcompat python3 make g++
RUN npm install isolated-vm --ignore-scripts
RUN apk add curl bash openssl && \
    rm -rf /var/cache/apk/*
# Installs helm for the helmchart action
RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
COPY --from=builder /packages/backend/dist/bundle.tar.gz .
RUN tar xzf bundle.tar.gz && rm bundle.tar.gz

# GAMBIS
COPY --from=builder /node_modules/ /app/node_modules/
COPY --from=builder /packages/backend/node_modules/ /app/packages/backend/node_modules/
COPY app-config.* .
COPY github-apps* .
CMD ["node", "--max-old-space-size=3144", "packages/backend", "--config", "app-config.yaml"]
