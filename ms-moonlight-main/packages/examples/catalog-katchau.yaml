apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: katchau-accelerate-metrics
  description: É um microsserviço de coleta e agrupamento de dados de deploys, commits e incidentes para geração de métricas do accelerate.
spec:
  owner: squad-atlantis
  type: system
  lifecycle: production

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: katchau-accelerate-metrics-api
  description: API do serviço katchau-accelerate-metrics (new version)
spec:
  type: openapi
  lifecycle: production
  owner: squad-atlantis
  definition: |
    basePath: /
    definitions:
      entity.AppRanking:
        properties:
          app_info:
            $ref: '#/definitions/entity.Apps'
          count:
            type: integer
        type: object
      entity.Apps:
        properties:
          cleaned_name:
            type: string
          id:
            type: string
          infrastructure_name:
            type: string
          language:
            type: string
          last_update:
            type: string
          lifecycle:
            type: string
          name:
            type: string
          owner:
            type: string
          repository_name:
            type: string
          uuid:
            type: string
        type: object
      entity.Build:
        properties:
          first_deploy:
            type: boolean
          id:
            type: string
        type: object
      entity.CommitLight:
        properties:
          _id:
            type: string
          author:
            type: string
          commit_id:
            type: string
          date:
            type: string
          merged_at:
            type: string
        type: object
      entity.Deploy:
        properties:
          apdex_after_deploy:
            type: number
          build:
            $ref: '#/definitions/entity.Build'
          commits:
            items:
              $ref: '#/definitions/entity.CommitLight'
            type: array
          deploy_identifier:
            type: string
          ended_at:
            type: string
          first_deploy:
            type: boolean
          id:
            type: string
          owner:
            type: string
          service:
            $ref: '#/definitions/entity.Service'
          source:
            type: string
          started_at:
            type: string
          status:
            type: string
        type: object
      entity.DeployFrequency:
        properties:
          deployments:
            type: integer
          frequency_average:
            type: number
          frequency_days:
            additionalProperties:
              $ref: '#/definitions/entity.FrequencyDay'
            type: object
        type: object
      entity.DeploymentCommits:
        properties:
          commits:
            type: integer
          details:
            additionalProperties:
              $ref: '#/definitions/entity.Deploy'
            type: object
          first_commit:
            type: string
          last_commit:
            type: string
          lead_time:
            type: number
        type: object
      entity.FirstCollaboration:
        properties:
          commit:
            type: string
          commit_date:
            type: string
          commit_id:
            type: string
          deploy_date:
            type: string
          service:
            $ref: '#/definitions/entity.Service'
        type: object
      entity.FrequencyDay:
        properties:
          count:
            type: integer
          details:
            additionalProperties:
              $ref: '#/definitions/entity.Deploy'
            type: object
        type: object
      entity.LeadTime:
        properties:
          average:
            type: number
          deployments:
            additionalProperties:
              $ref: '#/definitions/entity.DeploymentCommits'
            type: object
          total:
            type: integer
        type: object
      entity.Service:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
      entity.User:
        properties:
          first_collaboration:
            $ref: '#/definitions/entity.FirstCollaboration'
          id:
            type: string
          is_on_org:
            type: boolean
          joined_at:
            type: string
          last_update:
            type: string
          personal_email:
            type: string
          removed_at:
            type: string
          sso_email:
            type: string
          user_id:
            type: string
          username:
            type: string
        type: object
      entity.VisionMetric:
        properties:
          description:
            type: string
          doc:
            type: string
          name:
            type: string
          pass:
            type: boolean
          requirement:
            $ref: '#/definitions/entity.VisionMetricType'
        type: object
      entity.VisionMetricType:
        enum:
        - required
        - optional
        type: string
        x-enum-varnames:
        - VisionMetricTypeRequired
        - VisionMetricTypeOptional
      models.UserResponseModel:
        properties:
          data:
            items:
              $ref: '#/definitions/entity.User'
            type: array
          has_next_page:
            type: boolean
          page:
            type: integer
        type: object
    host: ms-katchau-accelerate-metrics.ms.prod
    info:
      contact:
        name: '#moonlight on Slack'
        url: https://moonlight.limbo.work/
      description: Gets the Accelerate Metrics per service.
      termsOfService: http://swagger.io/terms/]
      title: Katchau Accelerate Metrics
      version: "1.0"
    paths:
      /health:
        get:
          consumes:
          - '*/*'
          description: get the status of server.
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                additionalProperties: true
                type: object
          summary: Show the status of server.
          tags:
          - root
      /v1/external/deployment:
        post:
          consumes:
          - '*/*'
          description: Registers's a deployment information to Katchau.
          parameters:
          - description: authorization token
            in: header
            name: Authorization
            required: true
            type: string
          - description: the name of the application
            in: formData
            name: service_name
            required: true
            type: string
          - description: id of the deploy
            in: formData
            name: deployment_identifier
            required: true
            type: string
          - description: status of the deployment
            enum:
            - SUCCESS
            - ABORTED
            - FAILED
            - EXPIRED
            - REJECTED
            - QUEUED
            - RUNNING
            in: formData
            name: status
            required: true
            type: string
          - description: datetime of when deployment was triggered
            in: formData
            name: started_at
            required: true
            type: string
          - description: datetime of when deployment was finished
            in: formData
            name: ended_at
            required: true
            type: string
          - description: tag or version of the deployment
            in: formData
            name: build_no
            required: true
            type: string
          - description: cd origin name
            in: formData
            name: source
            required: true
            type: string
          - description: who made the deployment
            in: formData
            name: owner
            required: true
            type: string
          - description: environment on where the app was deployed
            enum:
            - staging
            - production
            in: formData
            name: environment
            required: true
            type: string
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                type: string
          summary: Registers's a deployment information to Katchau.
          tags:
          - root
      /v1/external/harness:
        post:
          consumes:
          - '*/*'
          description: Registers's a deployment information to Katchau.
          parameters:
          - description: authorization token
            in: header
            name: Authorization
            required: true
            type: string
          - description: the name of the application
            in: formData
            name: service_name
            required: true
            type: string
          - description: the id of the deployment
            in: formData
            name: deployment_uuid
            required: true
            type: string
          - description: status of the deployment
            enum:
            - SUCCESS
            - ABORTED
            - FAILED
            - EXPIRED
            - REJECTED
            - QUEUED
            - RUNNING
            in: formData
            name: status
            required: true
            type: string
          - description: timestamp that deployment was created
            in: formData
            name: created_at
            required: true
            type: string
          - description: environment of the deployment
            enum:
            - k8s-prod
            - k8s-qa
            in: formData
            name: cloud_provider
            required: true
            type: string
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                type: string
          summary: Registers's a deployment information to Katchau.
          tags:
          - root
      /v1/metrics/cfr:
        get:
          consumes:
          - '*/*'
          description: Gets the calculation of the Change Failure Rate (CFR) using de
            first commit date and the time that deploys was successfully finished, using
            Minutes as the unity of time.
          parameters:
          - description: name of the app
            in: query
            name: service_name
            required: true
            type: string
          - description: name of the squad who are the owner the app
            in: query
            name: owner_name
            type: string
          - description: group by day or week
            enum:
            - DAY
            - WEEK
            in: query
            name: exhibition
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: start_date
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: end_date
            required: true
            type: string
          - description: calculation that will be returned will be in median
            in: query
            name: median
            type: boolean
          - description: calculation that will be returned will be in the informed percentile
            in: query
            name: percentile
            type: boolean
          - description: returns the more information of the metric
            in: query
            name: detailed
            type: boolean
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/entity.LeadTime'
          summary: Shows the Change Failure Rate (CFR) for an app in an specific deploy
            time.
          tags:
          - root
      /v1/metrics/deploy-frequency:
        get:
          consumes:
          - '*/*'
          parameters:
          - description: name of the app
            in: query
            name: service_name
            type: string
          - description: name of the squad who are the owner the app
            in: query
            name: owner_name
            type: string
          - description: group by day or week
            enum:
            - DAY
            - WEEK
            in: query
            name: exhibition
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: start_date
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: end_date
            required: true
            type: string
          - description: returns metrics for apps that are using our pipeline
            in: query
            name: only_moonlight_pipeline
            type: boolean
          - description: calculation that will be returned will be in median
            in: query
            name: median
            type: boolean
          - description: calculation that will be returned will be in the informed percentile
            in: query
            name: percentile
            type: boolean
          - description: returns the more information of the metric
            in: query
            name: detailed
            type: boolean
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/entity.DeployFrequency'
          summary: Shows the deploy frequency for an app in an specific time.
          tags:
          - root
      /v1/metrics/lead-time:
        get:
          consumes:
          - '*/*'
          description: Gets the calculation of the lead time using de first commit date
            and the time that deploys was successfully finished, using Minutes as the
            unity of time.
          parameters:
          - description: name of the app
            in: query
            name: service_name
            required: true
            type: string
          - description: name of the squad who are the owner the app
            in: query
            name: owner_name
            type: string
          - description: group by day or week
            enum:
            - DAY
            - WEEK
            in: query
            name: exhibition
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: start_date
            required: true
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: end_date
            required: true
            type: string
          - description: calculation that will be returned will be in median
            in: query
            name: median
            type: boolean
          - description: returns the more information of the metric
            in: query
            name: detailed
            type: boolean
          - description: calculation that will be returned will be in the informed percentile
            in: query
            name: percentile
            type: boolean
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/entity.LeadTime'
          summary: Shows the lead time for an app in an specific deploy time.
          tags:
          - root
      /v1/metrics/status:
        get:
          consumes:
          - '*/*'
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/models.UserResponseModel'
          summary: Shows Metrics Information.
          tags:
          - root
      /v1/metrics/users:
        get:
          consumes:
          - '*/*'
          description: Basic info from a PicPay employee.
          parameters:
          - description: of users github
            in: query
            name: username
            type: string
          - description: '@PicPay email'
            in: query
            name: sso_email
            type: string
          - description: filters by the deploy from first commit. Must by formatted as
              YYYY-MM-DDTHH:mm:ss
            in: query
            name: first_collaboration.deploy_date
            type: string
          - description: filters by first commit date. Must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: first_collaboration.commit_date
            type: string
          - description: filters by service on which first commit occured
            in: query
            name: first_collaboration.service.name
            type: string
          - description: date that user joined the organization. Must by formatted as
              YYYY-MM-DDTHH:mm:ss
            in: query
            name: joined_at
            type: string
          - description: filter users that are included on org
            in: query
            name: is_on_org
            type: boolean
          - description: shows if the user is removed from organization
            in: query
            name: is_removed
            required: true
            type: boolean
          - description: for pagination
            in: query
            name: page
            required: true
            type: integer
          - description: of returns per request
            in: query
            name: limit
            required: true
            type: integer
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/models.UserResponseModel'
          summary: Shows PicPay users infomation.
          tags:
          - root
      /v1/ranking/app/most-committed:
        get:
          consumes:
          - '*/*'
          parameters:
          - description: limits the result
            in: query
            name: limit
            required: true
            type: integer
          - description: from current WEEK or MONTH
            enum:
            - MONTH
            - WEEK
            in: query
            name: from
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: start_date
            type: string
          - description: end_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: end_date
            type: string
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/entity.AppRanking'
          summary: Shows the Apps with more commits on main (only shows the apps that
            are in moonlight platform).
          tags:
          - root
      /v1/ranking/app/most-deployed:
        get:
          consumes:
          - '*/*'
          parameters:
          - description: limits the result
            in: query
            name: limit
            required: true
            type: integer
          - description: from current WEEK or MONTH
            enum:
            - MONTH
            - WEEK
            in: query
            name: from
            type: string
          - description: start_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: start_date
            type: string
          - description: end_date must by formatted as YYYY-MM-DDTHH:mm:ss
            in: query
            name: end_date
            type: string
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                $ref: '#/definitions/entity.AppRanking'
          summary: Shows the Apps with more deploys (only shows the apps that are in moonlight
            platform).
          tags:
          - root
      /v1/vision/metrics/{serviceName}:
        get:
          description: .
          parameters:
          - description: Account ID
            in: path
            name: serviceName
            required: true
            type: string
          produces:
          - application/json
          responses:
            "200":
              description: OK
              schema:
                items:
                  items:
                    $ref: '#/definitions/entity.VisionMetric'
                  type: array
                type: array
          summary: .
          tags:
          - root
    swagger: "2.0"

---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  labels:
    moonlight.picpay/language: go
    moonlight.picpay/framework: echo
    moonlight.picpay/database: mongodb
    moonlight.picpay/monitoring: dynatrace
    moonlight.picpay/queue: sqs
  name: ms-katchau-accelerate-metricss
  annotations:
    moonlight.picpay/cluster-hom: eks-applfm-use1-hom
  description: |
    É um microsserviço de coleta e agrupamento de dados de deploys, commits e incidentes para geração de métricas do accelerate.
  tags:
    - go
    - mongodb
    - sqs
    - dynatrace
  links:
    - url: https://picpay.atlassian.net/jira/software/c/projects/ATL/boards/1277
      title: Jira Board
      icon: dashboard
    - url: https://picpay.atlassian.net/wiki/spaces/A/overview
      title: Confluence Docs
      icon: docs
    - url: https://github.com/PicPay/katchau-accelerate-metrics/blob/main/README.md
      title: Readme
      icon: docs
    - url: https://onenr.io/0YBR6JM3bRO
      title: NewRelic Dash
      icon: dashboard
  visionSource:
    enable: true
    sources:
      - name: katchau-001
        description: Fake dora metrics
        url: http://127.0.0.1:28089/dora-metrics/:componentName
      - name: katchau-002
        description: Fake sonar
        url: http://127.0.0.1:28089/sonar/componentName
spec:
  lifecycle: production
  owner: squad-atlantis
  system: moonlight
  type: service
  providesApis:
    - katchau-accelerate-metrics-api
