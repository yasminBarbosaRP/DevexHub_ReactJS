apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: moonlight-template-microservice-complement-prd
  title: Production environment (MS)
  tags:
    - backend
    - microservice
    - moonlight-pipeline
    - argocd
  description: |
    Link microservice to Production environment
  annotations:
    moonlight.picpay/hidden: 'true'
  groupAllowedView:
    - squad-atlantis
spec:
  owner: squad-atlantis
  type: development

  parameters:
    - title: Basic Information
      required:
        - name
        - ownership
      properties:
        name:
          title: Name
          type: string
          description: |
            You don't need to add the `ms-`in the name, it will be added automatically where needed.
            Just put the name of your service, without picpay, dev, or ms example: validation-scrapers;
            Name of the kebab-case template component;
            Type a minimum of 3 characters and a maximum of 50;
            Lowercase only;
            Don't use accents;
            Don't use numbers;
            Separate words with hyphens;
          maxLength: 50
          minLength: 3
          pattern: '^(?=[a-z|0-9|-])(?!^ms-)(?!picpay-dev-)(?!picpay-dev-ms-)[a-z|0-9|-]*$'
          ui:autofocus: true
          ui:options:
            rows: 5

        ownership:
          title: Ownership
          type: object
          description: |
            Select the Owner, Business Unit and pair of Cluster to be deployed on.
          ui:field: OwnershipComboPicker
          ui:options:
            bu:
              title: 'BU'
              description: 'Business Unit - Business unit linked to the product'
              allowedKinds:
                - Group
              allowedTypes:
                - business-unit
              defaultKind: Group
              useDisplayName: true
              allowArbitraryValues: false
            owner:
              title: Responsible
              description: |
                Squad Name Responsible for the component on Github https://github.com/orgs/PicPay/teams (NOTE: If your team is not listed here, please contact Support on Zendesk to create your team on PicPay's Github Organization)
              allowedKinds:
                - Group
              defaultKind: Group
              allowArbitraryValues: false
            cluster:
              title: Cluster
              description: |
                Pair of clusters to application be deployed on. (NOTE: If your Business Unit doesn't have a pair of clusters, please contact #code-kloud-team on Slack)
              allowedKinds:
                - Resource
              allowedTypes:
                - eks
              groupBy:
                type: suffix
                values:
                  - key: '-prd'
                    alias: production
                  - key: '-hom'
                    alias: homolog
              defaultKind: Resource
              allowArbitraryValues: false
            info:
              text: 'For now, your Component will use a standarized and shared NodeAffinity and this is dangerous for critical applications, if you feel like is something that you want to change, please contact your SRE after the creation of the Component is complete.'
              link:
                text: 'Click here for more information'
                url: 'https://picpay.atlassian.net/wiki/spaces/MOON/pages/2834956313/Node+Affinity'

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: .
        copyWithoutTemplating:
          - template.yaml
        values:
          name: 'ms-${{ parameters.name }}'
          cluster: '${{ parameters.ownership.cluster }}'
          bu: '${{ parameters.ownership.bu }}'

    - id: argocd-prd
      if: ${{ parameters.ownership.cluster.production }}
      name: Creating app on ArgoCD [production]
      action: moonlight:push-to-branch
      input:
        cwd: argocd
        paths:
          - ./apps/ms-${{ parameters.name }}/prd
        repo: moonligh-template-local
        targetBranch: local/add-ms-${{ parameters.name }}
        baseBranch: main
        commitMsg: Adds service settings ms-${{ parameters.name }}

    - id: finish
      name: Finish
      action: moonlight:writer
      input:
        messages:
          - '---------------------------'
          - 'Congratulations!'
          - 'Your service has been successfully configured.'
          - '---------------------------'
